# Generated by Django 4.2.7 on 2023-12-08 11:34

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='RoleMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_name', models.CharField(max_length=50)),
                ('description', models.TextField(null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_delete', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(max_length=150, null=True)),
                ('modified_by', models.CharField(max_length=150, null=True)),
            ],
            options={
                'db_table': 'rolemaster',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Customuser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=20, null=True)),
                ('last_name', models.CharField(max_length=20, null=True)),
                ('username', models.CharField(null=True, unique=True)),
                ('password', models.CharField(max_length=250)),
                ('email', models.EmailField(max_length=254, null=True, unique=True)),
                ('country_code', models.CharField(max_length=10, null=True)),
                ('mobile_number', models.CharField(max_length=20, unique=True)),
                ('address', models.TextField(null=True)),
                ('country_name', models.CharField(max_length=50, null=True)),
                ('state_name', models.CharField(max_length=50, null=True)),
                ('zipcode', models.IntegerField(null=True)),
                ('gender', models.CharField(blank=True, max_length=10, null=True)),
                ('bio', models.CharField(max_length=256, null=True)),
                ('date_of_birth', models.DateField(null=True)),
                ('temp_otp', models.CharField(max_length=6)),
                ('is_approved', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_delete', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_users', to='user.rolemaster')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_users', to='user.rolemaster')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.rolemaster')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'customuser',
                'ordering': ['-created_at'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
